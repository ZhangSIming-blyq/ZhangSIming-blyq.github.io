<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>containerd on 百里英骐</title>
    <link>https://zhangsiming-blyq.github.io/tags/containerd/</link>
    <description>Recent content in containerd on 百里英骐</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Apr 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhangsiming-blyq.github.io/tags/containerd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>浅谈 containerd</title>
      <link>https://zhangsiming-blyq.github.io/post/containerd/</link>
      <pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhangsiming-blyq.github.io/post/containerd/</guid>
      <description>伴随着kubernetes对docker的弃用，containerd开始进入大众视野；相比于kubelet中集成docker-shim连接docker，docker再次条用containerd去管理容器，直接使用containerd可以通过原生CRI接口的调用实现容器runtime，简化了调用链路，更加的灵活可靠。
 一、安装使用 ctr 管理 containerd 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  # Install Dependent Libraries $ sudo apt-get update $ sudo apt-get install libseccomp2 # 下载 # 目前是下载的1.5.2 $ wget https://github.com/containerd/containerd/releases/download/v${VERSION}/cri-containerd-cni-${VERSION}-linux-amd64.tar.gz # 安装 $ sudo tar --no-overwrite-dir -C / -xzf cri-containerd-cni-${VERSION}-linux-amd64.tar.gz # 初始化containerd配置 $ containerd config default &amp;gt; /etc/containerd/config.toml # 修改默认的sandbox_image $ vim /etc/containerd/config.toml ... sandbox_image = &amp;#34;registry.cn-beijing.aliyuncs.com/shannonai-k8s/pause:3.1&amp;#34; ... # 启动服务 sudo systemctl daemon-reload sudo systemctl start containerd # 查看版本 $ ctr version Client: Version: 1.4.3 Revision: 269548fa27e0089a8b8278fc4fc781d7f65a939b Go version: go1.13.15 Server: Version: 1.4.3 Revision: 269548fa27e0089a8b8278fc4fc781d7f65a939b UUID: b7e3b0e7-8a36-4105-a198-470da2be02f2   二、containerd 使用 2.1 运行一个 busybox 镜像：  demo:  1 2 3 4 5 6 7 8 9  # 拉取镜像 $ ctr -n k8s.</description>
    </item>
    
  </channel>
</rss>